/*global require, console, process */

var express = require('express'), 
    port, server, configPath, config, apps;
    
    
    
// 0. dependencies
require('../ext-ux/');
var Async = Ext.ux.data.Async;


// 1. load configuration settings
port = process.env.PORT || 1337;
switch (process.env.NODE_ENV) {
case 'production':
    configPath = './config-production.js';
    break;
case 'staging':
    configPath = './config-staging.js';
    break;
default:
    configPath = './config-development.js';
    break;
}
config = require(configPath);
console.log('loaded config: ' + configPath);


// 2. create an express server
server = express();


// 3. attach express server to config object
config.server = server;
config.express = express;



// 4. require and instantiate apps to attach to this server
apps = config.apps || [config];
Async.every({
    params: {
        items: apps,
        fn: function(o){
            var appConfig = o.params.item,
                app;
                
            // load the module
            require(appConfig.module);
            
            // merge in any shared config items
            Ext.applyIf(appConfig, config);  
            
            // instantiate the app
            app = Ext.create(appConfig.mainAppClass, appConfig);
            
            // initialize (async)
            app.initialize(o);      
        }
    },
    success: function(){
        
        // 5. start server listening
        server.listen(port);
        console.log('listening port: ' + port);
        
    },
    failure: function(msg){
        console.log('Error: ' + msg);
    }
});











