/*global */


Ext.define('demo1.manager.ToorfManager', {
    extend: 'Ext.ux.app.Manager',

    stateMachineConfig: {
        state: {
            running: {
                trans: {
                    stopped: 'ref:state.stopped'
                }
            },
            stopped: {
                trans: {
                    running: 'ref:state.running'
                }
            },
            error: {}
        },
        initial: 'ref:state.stopped',
        error: 'ref:state.error',
        afterChange: 'onChangeState'
    },

    initialize: function (o) {

        this.handleSuccess(o);

        // check for autoStart
        if (this.config && this.config.autoStart === true) {
            this.start();
        }
    },

    // here we are calling function "gotoState" synchronously because 
    // this state machine is configured as SYNCHRONOUS
    start: function (o) {
        this.gotoState('running');
        this.getState(o);
    },
    stop: function (o) {
        this.gotoState('stopped');
        this.getState(o);
    },
    getState: function (o) {
        this.handleSuccess(o, this.getCurrentState() || 'unknown');
    },
    getHealth: function (o) {
        this.getApplication().health(o);
    },

    getVersion: function (o) {
        this.handleSuccess(o, '0.1.0');
    },

    onChangeState: function (newState) {
        switch (newState) {
        case 'running':
        case 'run':
            //this.getManager('polling').start();
            this.isRunning = true;
            break;
        default:
            //this.getManager('polling').stop();
            this.isRunning = false;
            break;
        }
    }

});